{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/s3-presigned-upload-rails/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"13e45847-df5b-555a-a85e-c037e7e2d367","excerpt":"Before you start playing around with rails, it is important to setup AWS to support presigned upload. Create S3 bucket When you are creating you S3 bucket, makeâ€¦","html":"<p>Before you start playing around with rails, it is important to setup AWS to support presigned upload.</p>\n<h2>Create S3 bucket</h2>\n<p>When you are creating you S3 bucket, make sure you configureyour CORS:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;CORSConfiguration xmlns=&quot;http://s3.amazonaws.com/doc/2006-03-01/&quot;&gt;\n&lt;CORSRule&gt;\n    &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;\n    &lt;AllowedMethod&gt;POST&lt;/AllowedMethod&gt;\n    &lt;AllowedHeader&gt;*&lt;/AllowedHeader&gt;\n&lt;/CORSRule&gt;\n&lt;/CORSConfiguration&gt;</code></pre></div>\n<p>If you need the files in the bucket to be public, make sure you make sure under block access is disabled.</p>\n<h2>Create IAM</h2>\n<p>When you are granting access to the SDK, you do not want to use your primary account for security purposes. Incase it is compromised, you can restrict it to only have desired actions. Do not make it an admin!\nAlso when you are creating your new IAM make sure you select <code class=\"language-text\">Programmatic access</code>. This will allow you have to API access through the sdk.\nYou will also need to set the permissions policies. I recomend creating a custom one like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    &quot;Version&quot;: &quot;2012-10-17&quot;,\n    &quot;Statement&quot;: [\n        {\n            &quot;Effect&quot;: &quot;Allow&quot;,\n            &quot;Action&quot;: [\n                &quot;s3:Post*&quot;\n            ],\n            &quot;Resource&quot;: [\n                &quot;arn:aws:s3:::example-avatars/*&quot;\n            ]\n        }\n    ]\n}</code></pre></div>\n<p>Make sure you change <code class=\"language-text\">example-avatars</code> to match your s3 bucket name.</p>\n<p>When you are create the new IAM copy they <code class=\"language-text\">key</code> and <code class=\"language-text\">secret</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">gem &#39;aws-sdk-s3&#39;\ngem &#39;dotenv-rails&#39;, groups: [:development, :test]</code></pre></div>\n<p><code class=\"language-text\">.env</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">AWS_KEY=XXXXXXXXXXX\nAWS_SECRET=XXXXXXXX</code></pre></div>\n<p><code class=\"language-text\">config/initializers/aws.rb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">require &#39;aws-sdk-s3&#39;\n\nAws.config.update({\n  region: &#39;us-west-1&#39;,\n  credentials: Aws::Credentials.new(ENV[&#39;AWS_KEY&#39;], ENV[&#39;AWS_SECRET&#39;])\n})</code></pre></div>\n<p><code class=\"language-text\">app/controllers/avatar_s3_presign_controller.rb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class AvatarS3PresignController &lt; ApplicationController\n  skip_before_action :verify_authenticity_token, raise: false\n\n  def create\n    render json: {\n      &#39;form-data&#39; =&gt; s3_direct_post.fields,\n      key: key,\n      presigned_post: s3_direct_post,\n      url: s3_direct_post.url,\n    }\n  end\n\n  private\n\n  def key\n    @key ||= &quot;user/#{client.id}/avatar-#{SecureRandom.uuid}&quot;\n  end\n\n  def s3_direct_post\n    @s3_direct_post ||= begin\n      s3 = Aws::S3::Resource.new\n      bucket = s3.bucket(&#39;example_bucket&#39;)\n      bucket.presigned_post(key: key, success_action_status: &#39;201&#39;, acl: &#39;public-read&#39;)\n    end\n  end\n\n  def client\n    Client.last # todo make sure you change this not to be the last client\n  end\nend</code></pre></div>\n<p><code class=\"language-text\">app/controllers/avatar_controller.rb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class AvatarController &lt; ApplicationController\n  skip_before_action :verify_authenticity_token, raise: false\n  before_action :fetch_client\n\n  def create\n    if @client.update(avatar_params)\n      render json: { message: &#39;Uploaded&#39; }\n    else\n      render json: { message: @client.errors.full_messages.to_sentence }\n    end\n  end\n\n  def edit;end\n\n  private\n\n  def avatar_params\n    params.require(:client).permit(:avatar_url)\n  end\n\n  def fetch_client\n    @client = Client.last # todo make sure you change this not to be the last client\n  end\nend</code></pre></div>\n<p><code class=\"language-text\">app/assets/javascripts/avatar.js</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">function readURL(input) {\n  if (input.files &amp;&amp; input.files[0]) {\n    const file = input.files[0];\n\n    $.post(&#39;/avatar_s3_presign&#39;, {}, function (resp) {\n      var image = resp.url + &#39;/&#39; + resp.key;\n\n      var formData = new FormData();\n      for (let key in resp.form_data) {\n        formData.append(key, resp.form_data[key]);\n      }\n      formData.append(&#39;file&#39;, input.files[0]);\n\n      $.ajax({\n        type: &quot;POST&quot;,\n        url: resp.url,\n        data: formData,\n        processData: false,\n        contentType: false,\n        success: function(uploadResp) {\n          $.post(&#39;/avatar&#39;, {\n            client: {\n              avatar_url: image,\n            }\n          }, function (resp) {\n            var reader = new FileReader();\n            reader.onload = function(e) {\n              $(&#39;#imagePreview&#39;).css(&#39;background-image&#39;, &#39;url(&#39;+e.target.result +&#39;)&#39;);\n              $(&#39;#imagePreview&#39;).hide();\n              $(&#39;#imagePreview&#39;).fadeIn(650);\n            }\n\n            reader.readAsDataURL(input.files[0]);\n          }).fail(function(response) {\n            var message = response.responseJSON.message || &#39;On no something went wrong&#39;;\n            alert(message);\n          });\n        }\n      })\n    });\n  }\n}\n\n$(&quot;#imageUpload&quot;).change(function() {\n  readURL(this);\n});</code></pre></div>\n<p><code class=\"language-text\">app/views/avatar/edit.html.erb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;%= javascript_include_tag &#39;avatar&#39; %&gt;\n&lt;%= stylesheet_link_tag &#39;avatar&#39; %&gt;\n&lt;div class=&quot;avatar-upload&quot;&gt;\n  &lt;div class=&quot;avatar-edit&quot;&gt;\n    &lt;input type=&#39;file&#39; id=&quot;imageUpload&quot; accept=&quot;.png, .jpg, .jpeg&quot; /&gt;\n    &lt;label for=&quot;imageUpload&quot;&gt;&lt;/label&gt;\n  &lt;/div&gt;\n  &lt;div class=&quot;avatar-preview&quot;&gt;\n    &lt;div id=&quot;imagePreview&quot; style=&quot;background-image: url(&lt;%= @client.avatar_url || &#39;http://i.pravatar.cc/500?img=7&#39; %&gt;);&quot;&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/div&gt;</code></pre></div>\n<p><code class=\"language-text\">app/stylesheets/edit.scss</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">.avatar-upload {\n  position: relative;\n  max-width: 205px;\n  margin: 50px auto;\n\n  .avatar-edit {\n    position: absolute;\n    right: 12px;\n    z-index: 1;\n    top: 10px;\n\n    input {\n      display: none;\n      + label {\n        display: inline-block;\n        width: 34px;\n        height: 34px;\n        margin-bottom: 0;\n        border-radius: 100%;\n        background: #FFFFFF;\n        border: 1px solid transparent;\n        box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.12);\n        cursor: pointer;\n        font-weight: normal;\n        transition: all .2s ease-in-out;\n\n        &amp;:hover {\n          background: #f1f1f1;\n          border-color: #d6d6d6;\n        }\n\n        &amp;:after {\n          content: &quot;\\f040&quot;;\n          font-family: &#39;FontAwesome&#39;;\n          color: #757575;\n          position: absolute;\n          top: 10px;\n          left: 0;\n          right: 0;\n          text-align: center;\n          margin: auto;\n        }\n      }\n    }\n  }\n\n  .avatar-preview {\n    width: 192px;\n    height: 192px;\n    position: relative;\n    border-radius: 100%;\n    border: 6px solid #F8F8F8;\n    box-shadow: 0px 2px 4px 0px rgba(0, 0, 0, 0.1);\n\n    &gt; div {\n      width: 100%;\n      height: 100%;\n      border-radius: 100%;\n      background-size: cover;\n      background-repeat: no-repeat;\n      background-position: center;\n    }\n  }\n}</code></pre></div>\n<p><code class=\"language-text\">config/routes.rb</code></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Rails.application.routes.draw do\n  resources :avatar, only: [:create]\n  resources :avatar_s3_presign, only: [:create]\nend</code></pre></div>","frontmatter":{"title":"S3 Presigned Upload Rails","date":"October 29, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/s3-presigned-upload-rails/","previous":{"fields":{"slug":"/ruby-use-yaml/"},"frontmatter":{"title":"Ruby use Yaml","tags":["ruby","ruby-on-rails"]}},"next":{"fields":{"slug":"/asdf/"},"frontmatter":{"title":"MacBook setup ASDF VM","tags":["swift"]}}}}}