{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/arduino/piezo-buzzer/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"5d70ca55-294a-5834-aefb-24c18b8ee1c8","excerpt":"Piezo.cpp pitches.h","html":"<h1>Piezo.cpp</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// CPP\n// Piezo + -&gt; 5V\n// Piezo - -&gt; GND\n// Piezo S -&gt; 8\n\n/*\n\n  Melody\n\n  Plays a melody\n\n  circuit:\n\n  - 8 ohm speaker on digital pin 8\n\n  created 21 Jan 2010\n\n  modified 30 Aug 2011\n\n  by Tom Igoe\n\n  This example code is in the public domain.\n\n  http://www.arduino.cc/en/Tutorial/Tone\n\n*/\n\n#include &quot;pitches.h&quot;\n\n// notes in the melody:\nint melody[] = {\n\n  NOTE_C4, NOTE_G3, NOTE_G3, NOTE_A3, NOTE_G3, 0, NOTE_B3, NOTE_C4\n};\n\n// note durations: 4 = quarter note, 8 = eighth note, etc.:\nint noteDurations[] = {\n\n  4, 8, 8, 4, 4, 4, 4, 4\n};\n\nvoid setup() {\n\n  // iterate over the notes of the melody:\n\n  for (int thisNote = 0; thisNote &lt; 8; thisNote++) {\n\n    // to calculate the note duration, take one second divided by the note type.\n\n    //e.g. quarter note = 1000 / 4, eighth note = 1000/8, etc.\n\n    int noteDuration = 1000 / noteDurations[thisNote];\n\n    tone(8, melody[thisNote], noteDuration);\n\n    // to distinguish the notes, set a minimum time between them.\n\n    // the note&#39;s duration + 30% seems to work well:\n\n    int pauseBetweenNotes = noteDuration * 1.30;\n\n    delay(pauseBetweenNotes);\n\n    // stop the tone playing:\n\n    noTone(8);\n\n  }\n}\n\nvoid loop() {\n\n  // no need to repeat the melody.\n}</code></pre></div>\n<h1>pitches.h</h1>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/*************************************************\n\n * Public Constants\n\n *************************************************/\n\n#define NOTE_B0  31\n#define NOTE_C1  33\n#define NOTE_CS1 35\n#define NOTE_D1  37\n#define NOTE_DS1 39\n#define NOTE_E1  41\n#define NOTE_F1  44\n#define NOTE_FS1 46\n#define NOTE_G1  49\n#define NOTE_GS1 52\n#define NOTE_A1  55\n#define NOTE_AS1 58\n#define NOTE_B1  62\n#define NOTE_C2  65\n#define NOTE_CS2 69\n#define NOTE_D2  73\n#define NOTE_DS2 78\n#define NOTE_E2  82\n#define NOTE_F2  87\n#define NOTE_FS2 93\n#define NOTE_G2  98\n#define NOTE_GS2 104\n#define NOTE_A2  110\n#define NOTE_AS2 117\n#define NOTE_B2  123\n#define NOTE_C3  131\n#define NOTE_CS3 139\n#define NOTE_D3  147\n#define NOTE_DS3 156\n#define NOTE_E3  165\n#define NOTE_F3  175\n#define NOTE_FS3 185\n#define NOTE_G3  196\n#define NOTE_GS3 208\n#define NOTE_A3  220\n#define NOTE_AS3 233\n#define NOTE_B3  247\n#define NOTE_C4  262\n#define NOTE_CS4 277\n#define NOTE_D4  294\n#define NOTE_DS4 311\n#define NOTE_E4  330\n#define NOTE_F4  349\n#define NOTE_FS4 370\n#define NOTE_G4  392\n#define NOTE_GS4 415\n#define NOTE_A4  440\n#define NOTE_AS4 466\n#define NOTE_B4  494\n#define NOTE_C5  523\n#define NOTE_CS5 554\n#define NOTE_D5  587\n#define NOTE_DS5 622\n#define NOTE_E5  659\n#define NOTE_F5  698\n#define NOTE_FS5 740\n#define NOTE_G5  784\n#define NOTE_GS5 831\n#define NOTE_A5  880\n#define NOTE_AS5 932\n#define NOTE_B5  988\n#define NOTE_C6  1047\n#define NOTE_CS6 1109\n#define NOTE_D6  1175\n#define NOTE_DS6 1245\n#define NOTE_E6  1319\n#define NOTE_F6  1397\n#define NOTE_FS6 1480\n#define NOTE_G6  1568\n#define NOTE_GS6 1661\n#define NOTE_A6  1760\n#define NOTE_AS6 1865\n#define NOTE_B6  1976\n#define NOTE_C7  2093\n#define NOTE_CS7 2217\n#define NOTE_D7  2349\n#define NOTE_DS7 2489\n#define NOTE_E7  2637\n#define NOTE_F7  2794\n#define NOTE_FS7 2960\n#define NOTE_G7  3136\n#define NOTE_GS7 3322\n#define NOTE_A7  3520\n#define NOTE_AS7 3729\n#define NOTE_B7  3951\n#define NOTE_C8  4186\n#define NOTE_CS8 4435\n#define NOTE_D8  4699\n#define NOTE_DS8 4978</code></pre></div>","frontmatter":{"title":"Arduino Piezo Buzzer","date":"March 03, 2021","description":"How to use a piezo buzzer with an Arduino.","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/arduino/piezo-buzzer/","previous":{"fields":{"slug":"/python/getting-started-moteus-on-mac-using-python/"},"frontmatter":{"title":"Getting started moteus on mac using python","tags":["python"]}},"next":{"fields":{"slug":"/arduino/piezo-trigger/"},"frontmatter":{"title":"Arduino Piezo Trigger","tags":["arduino"]}}}}}