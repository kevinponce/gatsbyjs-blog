{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/react-phone-input/","webpackCompilationHash":"ac912fd53ec521c3c3c1","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"ac8250cc-f9d2-5474-acfb-84d56e6c0c41","excerpt":"Phone Input with a country code is something designers love, and every time have to make one I grown. To make my life easier, I decided to create a genericâ€¦","html":"<p>Phone Input with a country code is something designers love, and every time have to make one I grown.</p>\n<p>To make my life easier, I decided to create a generic component I can use to make my life easier.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;;\nimport PropTypes from &#39;prop-types&#39;;\nimport intlTelInput from &#39;intl-tel-input&#39;;\nimport { get } from &#39;lodash&#39;;\nimport &#39;../../../../node_modules/intl-tel-input/build/css/intlTelInput.css&#39;;\nimport &#39;../../../../node_modules/intl-tel-input/build/js/utils.js&#39;;\n\nclass PhoneInput extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.phoneInput = null;\n    this.phoneInputRef = React.createRef();\n\n    this.phoneChange = this.phoneChange.bind(this);\n  }\n\n  componentDidMount() {\n    const _this = this;\n    _this.phoneInput = intlTelInput(_this.phoneInputRef.current, {\n      preferredCountries: [&#39;us&#39;, &#39;gb&#39;, &#39;ca&#39;, &#39;au&#39;]\n    });\n\n    _this.phoneInputRef.current.addEventListener(&quot;countrychange&quot;, function() {\n      _this.phoneChange();\n    });\n\n    if (_this.props.phone) {\n      _this.phoneInput.setNumber(_this.props.phone);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.phone !== nextProps.phone &amp;&amp; nextProps.phone) {\n      this.phoneInput.setNumber(nextProps.phone);\n      this.phoneChange();\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.phoneInput) {\n      this.phoneInput.destroy();\n    }\n  }\n\n  phoneChange (e) {\n    let error = this.phoneInput.getValidationError();\n    let phone = this.phoneInput.getNumber();\n    let isValidPhoneNumber = this.phoneInput.isValidNumber();\n    let countryCode = get(this.phoneInput.getSelectedCountryData(), &#39;iso2&#39;);\n\n    this.props.onPhoneNumberChange({ isValidPhoneNumber, phone, error, countryCode });\n  }\n\n  render() {\n    return (\n      &lt;input type=&quot;text&quot;\n             ref={this.phoneInputRef}\n             onChange={this.phoneChange}\n             className={this.props.className}\n             placeholder={this.props.placeholder || &quot;&quot;} /&gt;\n    );\n  }\n}\n\nPhoneInput.propTypes = {\n  onPhoneNumberChange: PropTypes.func.isRequired,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  phone: PropTypes.string,\n};\n\nexport default PhoneInput;</code></pre></div>\n<p>Here is an example on how to use it:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Example extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.phoneInputChange = this.phoneInputChange.bind(this);\n\n    this.state = {\n      isValidPhoneNumber: false,\n      phone: &#39;&#39;,\n      countryCode: &#39;&#39;\n    };\n  }\n\n  phoneInputChange({ isValidPhoneNumber, phone, countryCode }){\n    this.setState({ isValidPhoneNumber, phone, countryCode });\n  }\n\n  render() {\n    return (\n      &lt;PhoneInput onPhoneNumberChange={ this.phoneInputChange }\n                  className={`${this.state.isValidPhoneNumber ? &#39;valid&#39; : &#39;invalid&#39;}`}\n                  phone={this.state.phone} /&gt;\n    );\n  }\n}</code></pre></div>","frontmatter":{"title":"React Phone Input","date":"September 05, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-phone-input/","previous":{"fields":{"slug":"/checkbox-custom-style/"},"frontmatter":{"title":"Checkbox Custom Style","tags":["html"]}},"next":{"fields":{"slug":"/express-with-es6/"},"frontmatter":{"title":"Express with es6","tags":["javascript"]}}}}}