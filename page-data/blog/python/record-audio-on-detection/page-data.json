{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python/record-audio-on-detection/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"fd805514-7ac0-593f-9b16-b055c2e7d5a2","excerpt":"Here is a simple snippet of code that records when audio is detected in python. Before you can use it, make sure you install pydub.","html":"<p>Here is a simple snippet of code that records when audio is detected in python.</p>\n<p>Before you can use it, make sure you install pydub.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ brew install portaudio\n$ pip install pyaudio</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># brew install portaudio</span>\n<span class=\"token comment\"># pip install pyaudio</span>\n\n<span class=\"token keyword\">import</span> pyaudio\n<span class=\"token keyword\">import</span> wave\n<span class=\"token keyword\">import</span> audioop\n<span class=\"token keyword\">import</span> math\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> deque\n\n<span class=\"token comment\"># Silence limit in seconds. The max ammount of seconds where</span>\n<span class=\"token comment\"># only silence is recorded. When this time passes the</span>\n<span class=\"token comment\"># recording finishes and the file is delivered.</span>\n\n<span class=\"token comment\"># The silence threshold intensity that defines silence</span>\n<span class=\"token comment\"># and noise signal (an int. lower than THRESHOLD is silence).</span>\n\n<span class=\"token comment\"># Previous audio (in seconds) to prepend. When noise</span>\n<span class=\"token comment\"># is detected, how much of previously recorded audio is</span>\n<span class=\"token comment\"># prepended. This helps to prevent chopping the beggining</span>\n<span class=\"token comment\"># of the phrase.</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">record_on_detect</span><span class=\"token punctuation\">(</span>file_name<span class=\"token punctuation\">,</span> silence_limit<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> silence_threshold<span class=\"token operator\">=</span><span class=\"token number\">2500</span><span class=\"token punctuation\">,</span> chunk<span class=\"token operator\">=</span><span class=\"token number\">1024</span><span class=\"token punctuation\">,</span> rate<span class=\"token operator\">=</span><span class=\"token number\">44100</span><span class=\"token punctuation\">,</span> prev_audio<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  CHANNELS <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n  FORMAT <span class=\"token operator\">=</span> pyaudio<span class=\"token punctuation\">.</span>paInt16\n\n  p <span class=\"token operator\">=</span> pyaudio<span class=\"token punctuation\">.</span>PyAudio<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  stream <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">format</span><span class=\"token operator\">=</span>p<span class=\"token punctuation\">.</span>get_format_from_width<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n                  channels<span class=\"token operator\">=</span>CHANNELS<span class=\"token punctuation\">,</span>\n                  rate<span class=\"token operator\">=</span>rate<span class=\"token punctuation\">,</span>\n                  <span class=\"token builtin\">input</span><span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n                  output<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\n                  frames_per_buffer<span class=\"token operator\">=</span>chunk<span class=\"token punctuation\">)</span>\n\n  listen <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n  started <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n  rel <span class=\"token operator\">=</span> rate<span class=\"token operator\">/</span>chunk\n  frames <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\n  prev_audio <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span>maxlen<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>prev_audio <span class=\"token operator\">*</span> rel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  slid_window <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span>maxlen<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>silence_limit <span class=\"token operator\">*</span> rel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">while</span> listen<span class=\"token punctuation\">:</span>\n    data <span class=\"token operator\">=</span> stream<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span>\n    slid_window<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>math<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>audioop<span class=\"token punctuation\">.</span>avg<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>x <span class=\"token operator\">></span> silence_threshold <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> slid_window<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">not</span> started<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Starting record of phrase\"</span><span class=\"token punctuation\">)</span>\n        started <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\n    <span class=\"token keyword\">elif</span> <span class=\"token punctuation\">(</span>started <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      started <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n      listen <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n      prev_audio <span class=\"token operator\">=</span> deque<span class=\"token punctuation\">(</span>maxlen<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> rel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>started <span class=\"token keyword\">is</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n      frames<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\n      prev_audio<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\n\n  stream<span class=\"token punctuation\">.</span>stop_stream<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  stream<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n  p<span class=\"token punctuation\">.</span>terminate<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\n  wf <span class=\"token operator\">=</span> wave<span class=\"token punctuation\">.</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>file_name<span class=\"token punctuation\">}</span></span><span class=\"token string\">.wav'</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'wb'</span><span class=\"token punctuation\">)</span>\n  wf<span class=\"token punctuation\">.</span>setnchannels<span class=\"token punctuation\">(</span>CHANNELS<span class=\"token punctuation\">)</span>\n  wf<span class=\"token punctuation\">.</span>setsampwidth<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>get_sample_size<span class=\"token punctuation\">(</span>FORMAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  wf<span class=\"token punctuation\">.</span>setframerate<span class=\"token punctuation\">(</span>rate<span class=\"token punctuation\">)</span>\n\n  wf<span class=\"token punctuation\">.</span>writeframes<span class=\"token punctuation\">(</span><span class=\"token string\">b''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>prev_audio<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  wf<span class=\"token punctuation\">.</span>writeframes<span class=\"token punctuation\">(</span><span class=\"token string\">b''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>frames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  wf<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\nrecord_on_detect<span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Record Audio on detection","date":"November 25, 2020","description":"How to record audio when detected in python.","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python/record-audio-on-detection/","previous":{"fields":{"slug":"/ruby/rails/add-services/"},"frontmatter":{"title":"Add services to a rails project","tags":["ruby","ruby-on-rails"]}},"next":{"fields":{"slug":"/python/normalize-audio/"},"frontmatter":{"title":"Normalize audio","tags":["python"]}}}}}