{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/python/google-speech-to-text/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"2b15ef8a-8ee9-549a-9d54-47e27edb1876","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token keyword\">import</span> speech_recognition <span class=\"token keyword\">as</span> sr\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">recognize_speech_from_mic</span><span class=\"token punctuation\">(</span>recognizer<span class=\"token punctuation\">,</span> microphone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>recognizer<span class=\"token punctuation\">,</span> sr<span class=\"token punctuation\">.</span>Recognizer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> TypeError<span class=\"token punctuation\">(</span><span class=\"token string\">\"`recognizer` must be `Recognizer` instance\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> <span class=\"token builtin\">isinstance</span><span class=\"token punctuation\">(</span>microphone<span class=\"token punctuation\">,</span> sr<span class=\"token punctuation\">.</span>Microphone<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">raise</span> TypeError<span class=\"token punctuation\">(</span><span class=\"token string\">\"`microphone` must be `Microphone` instance\"</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">with</span> microphone <span class=\"token keyword\">as</span> source<span class=\"token punctuation\">:</span>\n        recognizer<span class=\"token punctuation\">.</span>adjust_for_ambient_noise<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n        audio <span class=\"token operator\">=</span> recognizer<span class=\"token punctuation\">.</span>listen<span class=\"token punctuation\">(</span>source<span class=\"token punctuation\">)</span>\n\n    <span class=\"token comment\"># set up the response object</span>\n    response <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"success\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"transcription\"</span><span class=\"token punctuation\">:</span> <span class=\"token boolean\">None</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span>\n        response<span class=\"token punctuation\">[</span><span class=\"token string\">\"transcription\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> recognizer<span class=\"token punctuation\">.</span>recognize_google<span class=\"token punctuation\">(</span>audio<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">except</span> sr<span class=\"token punctuation\">.</span>RequestError<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># API was unreachable or unresponsive</span>\n        response<span class=\"token punctuation\">[</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\n        response<span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"API unavailable\"</span>\n    <span class=\"token keyword\">except</span> sr<span class=\"token punctuation\">.</span>UnknownValueError<span class=\"token punctuation\">:</span>\n        <span class=\"token comment\"># speech was unintelligible</span>\n        response<span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"Unable to recognize speech\"</span>\n\n    <span class=\"token keyword\">return</span> response\n\n\n<span class=\"token keyword\">if</span> __name__ <span class=\"token operator\">==</span> <span class=\"token string\">\"__main__\"</span><span class=\"token punctuation\">:</span>\n    <span class=\"token comment\"># create recognizer and mic instances</span>\n    recognizer <span class=\"token operator\">=</span> sr<span class=\"token punctuation\">.</span>Recognizer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    microphone <span class=\"token operator\">=</span> sr<span class=\"token punctuation\">.</span>Microphone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Speak! {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            guess <span class=\"token operator\">=</span> recognize_speech_from_mic<span class=\"token punctuation\">(</span>recognizer<span class=\"token punctuation\">,</span> microphone<span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">if</span> guess<span class=\"token punctuation\">[</span><span class=\"token string\">\"transcription\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> guess<span class=\"token punctuation\">[</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n                <span class=\"token keyword\">break</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"I didn't catch that. What did you say?\\n\"</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token comment\"># if there was an error, stop the game</span>\n        <span class=\"token keyword\">if</span> guess<span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ERROR: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">[</span><span class=\"token string\">\"error\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span>\n\n        <span class=\"token comment\"># show the user the transcription</span>\n        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"You said: {}\"</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>guess<span class=\"token punctuation\">[</span><span class=\"token string\">\"transcription\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Speech to text using google api and python","date":"December 26, 2019","description":"How to convert speech to text using google api and python.","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/python/google-speech-to-text/","previous":{"fields":{"slug":"/arduino/arcade-button/"},"frontmatter":{"title":"Arduino Arcade Button","tags":["arduino","circuit"]}},"next":{"fields":{"slug":"/python/control-your-keyboard/"},"frontmatter":{"title":"Control your keyboard using python","tags":["python"]}}}}}