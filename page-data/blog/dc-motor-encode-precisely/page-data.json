{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/dc-motor-encode-precisely/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"e062e0b8-66a0-5db7-be8a-b4c1c439d499","excerpt":"Here is a snippet of code that allows a 12V DC motor with a Hall Effect Quadrature Encoder to precisely move using an arduino. Before you can use the code, you…","html":"<p>Here is a snippet of code that allows a 12V DC motor with a Hall Effect Quadrature Encoder to precisely move using an arduino.</p>\n<p>Before you can use the code, you must install PIDController library by doing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">* Click sketch\n* Select Include Librart\n* Select Manage Libraies...\n* Install PIDController</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/* Wiring:\n * 12V Geared DC motor with Hall Effect Quadrature Encoder\n * Hall Sensor B Vout -&gt; Arduino  D2\n * Hall Sensor A Vout -&gt; Arduino  D3\n * Hall Sensor Vcc -&gt; 12 Volt Power Supply\n * Hall Sensor GND -&gt; GND\n * Motor- -&gt; L298N Out3\n * Motor+ -&gt; L298N Out4\n * \n * L298N Motor Driver\n * L298N Out3 -&gt; Motor-\n * L298N Out4 -&gt; Motor+\n * L298N IN3 -&gt; Arduino 10\n * L298N IN2 -&gt; Arduino 11\n * L298N 12V+ -&gt; 12 Volt Power Supply\n * L298N GND -&gt; GND\n * \n * 5 Lead Pot\n * POT LEFT to RIGHT\n * POT LEAD 0 -&gt; N/A\n * POT LEAD 1 -&gt; GND\n * POT LEAD 2 -&gt; Arduino A0\n * POT LEAD 3 -&gt; Arduino 5V\n * POT LEAD 4 -&gt; N/A\n */  \n \n#include &lt;PIDController.h&gt;\n\n#define encoderA 2\n#define encoderB 3\n#define motorA 9\n#define motorB 10\n\nvolatile long int encoder_pos = 0;\n---\ntitle: List branch sort by commit date\ndate: &quot;2020-11-13T22:12:00.121Z&quot;\ntags: [&quot;javascript&quot;, &quot;gatsby&quot;]\nheader: { type: &#39;icon&#39;, bgColor: &#39;#663399&#39;, icon: &#39;gatsby&#39; }\ndescription: List branch sort by commit date\n---\nList branch sort by commit date</code></pre></div>\n<p>PIDController pos<em>pid;\nint motor</em>value = 255;</p>\n<p>void setup() {\nSerial.begin(9600);\npinMode(encoderA, INPUT);\npinMode(encoderB, INPUT);\npinMode(motorA, OUTPUT);\npinMode(motorB, OUTPUT);\nattachInterrupt(digitalPinToInterrupt(2), encoder, RISING);</p>\n<p>  pos<em>pid.begin();<br>\npos</em>pid.tune(20, 0, 200);<br>\npos_pid.limit(-255, 255);\n}</p>\n<p>void loop() {\npos<em>pid.setpoint((int)(((float)analogRead(A0)/1023) * 374.0 *1));\nmotor</em>value = pos<em>pid.compute(encoder</em>pos);</p>\n<p>  if (motor<em>value > 0) {\nMotorCounterClockwise(motor</em>value);\n} else {\nMotorClockwise(abs(motor_value));\n}</p>\n<p>  Serial.println(encoder_pos);\ndelay(2);\n}</p>\n<p>void encoder() {\nif (digitalRead(3) == HIGH) {\nencoder<em>pos++;\n} else {\nencoder</em>pos—;\n}\n}</p>\n<p>void MotorClockwise(int power){\nif (power > 50) {\nanalogWrite(9, power);\ndigitalWrite(10, LOW);\n} else {\ndigitalWrite(9, LOW);\ndigitalWrite(10, LOW);\n}\n}</p>\n<p>void MotorCounterClockwise(int power) {\nif (power > 50) {\nanalogWrite(10, power);\ndigitalWrite(9, LOW);\n} else {\ndigitalWrite(9, LOW);\ndigitalWrite(10, LOW);\n}\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","frontmatter":{"title":"DC motor encode precisely","date":"November 13, 2020","description":"List branch sort by commit date","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/dc-motor-encode-precisely/","previous":{"fields":{"slug":"/reformat-sd-card/"},"frontmatter":{"title":"Reformat SD Card","tags":["3dprint"]}},"next":null}}}