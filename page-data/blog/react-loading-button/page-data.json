{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/react-loading-button/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"be1343e0-ff8a-58a5-ba0e-1a5eeee6175a","excerpt":"In order to provide a good user experience, user should recieve fast feedback when they click a button. Sometimes network calls can take too long, so we have toâ€¦","html":"<p>In order to provide a good user experience, user should recieve fast feedback when they click a button.</p>\n<p>Sometimes network calls can take too long, so we have to display a something to tell user that something is happening.</p>\n<p>Here is a simple react component that will accomplish this, and is easily reusable.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// example.js\nimport React, { Component } from &#39;react&#39;;\nimport PropTypes from &#39;prop-types&#39;;\nimport LoadingButton from &#39;./loadingButton&#39;;\n\nexport default class Example extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    }\n\n    this.spinner = this.spinner.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  render() {\n    return (\n      &lt;LoadingButton loading={this.state.loading}\n                     onClick={() =&gt; this.setState({ loading: !this.state.loading }) }\n      /&gt;\n    )\n  }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// loadingButton.js\nimport React, { Component } from &#39;react&#39;;\nimport PropTypes from &#39;prop-types&#39;;\nimport &#39;./loadingButton.scss&#39;\n\nclass LoadingButton extends Component {\n  constructor(props) {\n    super(props);\n\n    this.spinner = this.spinner.bind(this);\n    this.onClick = this.onClick.bind(this);\n  }\n\n  spinner() {\n    if (this.props.loading) {\n      return (\n        &lt;svg version=&quot;1.1&quot; id=&quot;loader-1&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot; x=&quot;0px&quot; y=&quot;0px&quot;\n         width=&quot;40px&quot; height=&quot;40px&quot; viewBox=&quot;0 0 40 40&quot; enableBackground=&quot;new 0 0 40 40&quot;&gt;\n        &lt;path opacity=&quot;0.2&quot; fill=&quot;#000&quot; d=&quot;M20.201,5.169c-8.254,0-14.946,6.692-14.946,14.946c0,8.255,6.692,14.946,14.946,14.946\n          s14.946-6.691,14.946-14.946C35.146,11.861,28.455,5.169,20.201,5.169z M20.201,31.749c-6.425,0-11.634-5.208-11.634-11.634\n          c0-6.425,5.209-11.634,11.634-11.634c6.425,0,11.633,5.209,11.633,11.634C31.834,26.541,26.626,31.749,20.201,31.749z&quot;/&gt;\n        &lt;path fill=&quot;#000&quot; d=&quot;M26.013,10.047l1.654-2.866c-2.198-1.272-4.743-2.012-7.466-2.012h0v3.312h0\n          C22.32,8.481,24.301,9.057,26.013,10.047z&quot;&gt;\n          &lt;animateTransform attributeType=&quot;xml&quot;\n            attributeName=&quot;transform&quot;\n            type=&quot;rotate&quot;\n            from=&quot;0 20 20&quot;\n            to=&quot;360 20 20&quot;\n            dur=&quot;0.5s&quot;\n            repeatCount=&quot;indefinite&quot;/&gt;\n          &lt;/path&gt;\n        &lt;/svg&gt;\n      )\n    }\n  }\n\n  onClick() {\n    if (this.props.onClick) {\n      this.props.onClick();\n    }\n  }\n\n  render() {\n    if (this.props.onClick) {\n      return (\n        &lt;button className=&quot;loading-button&quot; onClick={this.onClick}&gt;\n          {this.spinner()}\n          {this.props.children}\n        &lt;/button&gt;\n      )\n    }\n\n    return (\n      &lt;button type=&quot;submit&quot; className=&quot;loading-button&quot;&gt;\n        {this.spinner()}\n        {this.props.children}\n      &lt;/button&gt;\n    )\n  }\n}\n\nLoadingButton.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  onClick: PropTypes.func,\n};\n\nexport default LoadingButton;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// loadingButton.scss\n.loading-button {\n  margin: 0 0 2em;\n  height: 100px;\n  width: 20%;\n  text-align: center;\n  padding: 1em;\n  margin: 0 auto 1em;\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n\n  svg {\n    margin: 6px 10px;\n    vertical-align: bottom;\n    position: absolute;\n    left: 0px;\n\n    path,\n    rect{\n      fill: #8ad7dd;\n    }\n  }\n}</code></pre></div>","frontmatter":{"title":"React Loading Button","date":"2019-10-23T22:12:00.121Z","description":"How to add a loading button to reactjs to provide feedback for good user experience","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-loading-button/","previous":{"fields":{"slug":"/react-loading-component/"},"frontmatter":{"title":"React Loading Component","tags":["javascript","react"]}},"next":{"fields":{"slug":"/arduino-water-sensor/"},"frontmatter":{"title":"Arduino Water Sensor","tags":["arduino"]}}}}}