{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/ruby/rails/elasticsearch/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"94a612e3-eb2f-5510-8aed-3337f3119a69","excerpt":"Install Elasticsearch Run Test Open  to make sure healthy. Add To ./Gemfile Install gem dependencies Configure Apply to Model Play with it Open  Custom indexâ€¦","html":"<h2>Install Elasticsearch</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install elasticsearch</code></pre></div>\n<h2>Run</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">elasticsearch</code></pre></div>\n<h2>Test</h2>\n<p>Open <code class=\"language-text\">http://localhost:9200/</code> to make sure healthy.</p>\n<h2>Add To ./Gemfile</h2>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">gem <span class=\"token string\">'elasticsearch-model'</span></code></pre></div>\n<h2>Install gem dependencies</h2>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">bundle install</code></pre></div>\n<h2>Configure</h2>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># config/initializers/elasticsearch.rb</span>\n<span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Client</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  log<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h2>Apply to Model</h2>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">'elasticsearch/model'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationRecord</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Callbacks</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<h2>Play with it</h2>\n<p>Open <code class=\"language-text\">bin/rails c</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>create_index<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>force<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># do this before indexing in seed</span>\n<span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>email<span class=\"token punctuation\">:</span> <span class=\"token string\">'ex@ample.com'</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">:</span> <span class=\"token string\">'password'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">:</span> <span class=\"token string\">'kevin'</span><span class=\"token punctuation\">)</span>\n<span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'kevin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">.</span>total</code></pre></div>\n<h2>Custom index</h2>\n<p>Lets say you wanted to add more the waht is being indexed in eleasticsearch.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">require</span> <span class=\"token string\">'elasticsearch/model'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationRecord</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Callbacks</span>\n\n  belongs_to <span class=\"token symbol\">:user</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">as_indexed_json</span></span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">self</span><span class=\"token punctuation\">.</span>as_json<span class=\"token punctuation\">(</span>\n      only<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:title</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      include<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        user<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n          only<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token symbol\">:id</span><span class=\"token punctuation\">,</span> <span class=\"token symbol\">:email</span><span class=\"token punctuation\">]</span>\n        <span class=\"token punctuation\">}</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>Since <code class=\"language-text\">Example</code> has user index in it, make sure you update all examples when user is updated by doing the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationRecord</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span>\n  include <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Callbacks</span>\n\n  has_many <span class=\"token symbol\">:examples</span>\n\n  after_save <span class=\"token symbol\">:index_examples_in_elasticsearch</span>\n\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">index_examples_in_elasticsearch</span></span>\n    examples<span class=\"token punctuation\">.</span>find_each <span class=\"token punctuation\">{</span> <span class=\"token operator\">|</span>example<span class=\"token operator\">|</span> example<span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>index_document <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">Example</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>create_index<span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>force<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># do this before indexing in seed</span>\n<span class=\"token constant\">Example</span><span class=\"token punctuation\">.</span>create<span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">:</span> <span class=\"token string\">'Example'</span><span class=\"token punctuation\">,</span> archive<span class=\"token punctuation\">:</span> <span class=\"token keyword\">false</span><span class=\"token punctuation\">,</span> user<span class=\"token punctuation\">:</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>last<span class=\"token punctuation\">)</span></code></pre></div>\n<h3>Scan all fields</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">User.__elasticsearch__.search(&#39;kevin&#39;).records</code></pre></div>\n<h3>Scan selected fields</h3>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>\n  query<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n    multi_match<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      query<span class=\"token punctuation\">:</span> <span class=\"token string\">'kevin'</span><span class=\"token punctuation\">,</span>\n      fields<span class=\"token punctuation\">:</span> <span class=\"token string\">%w[name]</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>records</code></pre></div>\n<h3>Starts with</h3>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'kev*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>records<span class=\"token punctuation\">.</span>total</code></pre></div>\n<h2>Pagination</h2>\n<p>When you add <code class=\"language-text\">kaminari</code> or <code class=\"language-text\">will_paginate</code> make sure it is above <code class=\"language-text\">elasticsearch-model</code></p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Gemfile</span>\ngem <span class=\"token string\">'kaminari'</span>\ngem <span class=\"token string\">'elasticsearch-model'</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">'kev*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>records</code></pre></div>\n<h2>Use in a controller</h2>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BooksController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ApplicationController</span>\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">index</span></span>\n    <span class=\"token keyword\">if</span> query\n      response <span class=\"token operator\">=</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>__elasticsearch__<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>query<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>results\n\n      <span class=\"token comment\"># recomend using jbuilder instead of building json in controller</span>\n      render json<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        results<span class=\"token punctuation\">:</span> response<span class=\"token punctuation\">.</span>results<span class=\"token punctuation\">,</span>\n        total<span class=\"token punctuation\">:</span> response<span class=\"token punctuation\">.</span>total\n      <span class=\"token punctuation\">}</span>\n      <span class=\"token keyword\">return</span>\n    <span class=\"token keyword\">end</span>\n\n    render json<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n      results<span class=\"token punctuation\">:</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>page<span class=\"token punctuation\">(</span>page<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      total<span class=\"token punctuation\">:</span> <span class=\"token constant\">User</span><span class=\"token punctuation\">.</span>count\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">private</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">query</span></span>\n    params<span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token symbol\">:query</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">page</span></span>\n    param<span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token symbol\">:page</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>This works create in a dev enviroment, but eleaticsearch needs to be secure to work in production.</p>\n<h2>Use AWS Elasticsearch</h2>\n<p>First you need to install a new gem.</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># Gemfile</span>\ngem <span class=\"token string\">'faraday_middleware-aws-signers-v4'</span></code></pre></div>\n<h3>Configure</h3>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># config/initializers/elasticsearch.rb</span>\n<span class=\"token keyword\">if</span> <span class=\"token constant\">Rails</span><span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">.</span>production<span class=\"token operator\">?</span>\n  <span class=\"token keyword\">require</span> <span class=\"token string\">'faraday_middleware/aws_signers_v4'</span>\n\n  <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Client</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">do</span> <span class=\"token operator\">|</span>f<span class=\"token operator\">|</span>\n    f<span class=\"token punctuation\">.</span>request<span class=\"token punctuation\">(</span>\n      <span class=\"token symbol\">:aws_signers_v4</span><span class=\"token punctuation\">,</span>\n      credentials<span class=\"token punctuation\">:</span> <span class=\"token constant\">Aws</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Credentials</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token constant\">ENV</span><span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token string\">'AWS_ACCESS_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">ENV</span><span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token string\">'AWS_SECRET_ACCESS_KEY'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      service_name<span class=\"token punctuation\">:</span> <span class=\"token string\">'es'</span><span class=\"token punctuation\">,</span>\n      region<span class=\"token punctuation\">:</span> <span class=\"token constant\">ENV</span><span class=\"token punctuation\">.</span>fetch<span class=\"token punctuation\">(</span><span class=\"token string\">'AWS_REGION'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">else</span>\n  <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Model</span><span class=\"token punctuation\">.</span>client <span class=\"token operator\">=</span> <span class=\"token constant\">Elasticsearch</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Client</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">new</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    log<span class=\"token punctuation\">:</span> <span class=\"token keyword\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">end</span></code></pre></div>","frontmatter":{"title":"Rails elasticsearch","date":"March 20, 2020","description":"How to elasticsearch in rails","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ruby/rails/elasticsearch/","previous":{"fields":{"slug":"/ruby/rails/annotate/"},"frontmatter":{"title":"Rails annotate models","tags":["ruby","ruby-on-rails"]}},"next":{"fields":{"slug":"/fusion-360-to-cura/"},"frontmatter":{"title":"Fusion 360 to cura","tags":["3Dprint"]}}}}}