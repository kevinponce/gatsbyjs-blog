{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/ruby/rails/restricting-by-ip/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"e7514e67-5c9f-5464-bb9b-5c57a72ff217","excerpt":"Sometime you are going to launch an app soon, but do not want everyone to have access to it. Here is a simple snipet of code what will easily allow you to allowâ€¦","html":"<p>Sometime you are going to launch an app soon, but do not want everyone to have access to it.</p>\n<p>Here is a simple snipet of code what will easily allow you to allow certain ips.</p>\n<p>First you need to create the whitelists model.\nThis can be done by running the following commands in a terminal:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">rails g model whitelist_pillow ip:string\nrails db:migrate</code></pre></div>\n<p>Now we have to add code to <code class=\"language-text\">ApplicationController</code> to restrict access based on the uers ip:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ApplicationController</span> <span class=\"token operator\">&lt;</span> <span class=\"token constant\">ActionController</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token constant\">Base</span>\n  <span class=\"token comment\"># before_action :valid_ip_address!</span>\n\n  <span class=\"token keyword\">private</span>\n\n  <span class=\"token keyword\">def</span> <span class=\"token method-definition\"><span class=\"token function\">valid_ip_address</span></span><span class=\"token operator\">!</span>\n    head <span class=\"token symbol\">:unauthorized</span> <span class=\"token keyword\">unless</span> <span class=\"token constant\">Whitelist</span><span class=\"token punctuation\">.</span>find_by<span class=\"token punctuation\">(</span>ip<span class=\"token punctuation\">:</span> request<span class=\"token punctuation\">.</span>remote_ip<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">end</span>\n<span class=\"token keyword\">end</span></code></pre></div>\n<p>If you want to restrict access add the following to the desired controller:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\">before_action <span class=\"token symbol\">:valid_ip_address!</span></code></pre></div>\n<p>Now all you have to do is create a new record with your ip in the whitelists tables.</p>","frontmatter":{"title":"Rails restricting by IP","date":"January 12, 2020","description":"How to restrict ip in a rails app","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/ruby/rails/restricting-by-ip/","previous":{"fields":{"slug":"/arduino/wireless-communicate-to-another-arduino/"},"frontmatter":{"title":"Arduino wireless communicate to another Arduino","tags":["arduino"]}},"next":{"fields":{"slug":"/ruby/rails/devise-custom-view/"},"frontmatter":{"title":"Devise custom view","tags":["ruby","ruby-on-rails"]}}}}}