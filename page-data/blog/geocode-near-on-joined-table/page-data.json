{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/geocode-near-on-joined-table/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"a4791ccd-195f-581e-b02c-9d4097dbd46e","excerpt":"How to use geocoder near method on a joined table in rails. In this example, geocoder is added to address model, but needs to be used in a parent model","html":"<p>How to use geocoder near method on a joined table in rails.</p>\n<p>In this example, geocoder is added to address model, but needs to be used in a parent model</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Parent &lt; ApplicationRecord\n  scope :near, -&gt; (*args) { joins(:address).merge(Address.near(*args)) }\nend</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class Address &lt; ApplicationRecord\n  geocoded_by :location do |obj, results|\n    if geo = results.first\n      obj.latitude = geo.latitude\n      obj.longitude = geo.longitude\n      obj.country_code = geo.country_code\n    end\n  end\n\n  def location\n    [address_line_1, city, state zip_code].join(&#39; &#39;)\n  end\nend</code></pre></div>","frontmatter":{"title":"Geocode near on joined table","date":"November 16, 2020","description":"How to use geocoder near method on a joined table in rails","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/geocode-near-on-joined-table/","previous":{"fields":{"slug":"/python-record-wav-file/"},"frontmatter":{"title":"Python record wav file","tags":["python"]}},"next":null}}}