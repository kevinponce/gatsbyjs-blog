{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/algolia-react/","result":{"data":{"site":{"siteMetadata":{"title":"Kevin Ponce Blog","author":"Kevin Ponce"}},"markdownRemark":{"id":"fc35f3c9-e64d-580e-b275-123494605b53","excerpt":"Algolia for ruby on rails was soo simple.\nI wish react would have been just as easy… They did a great job teaching how to create a basic search, but once you…","html":"<p>Algolia for ruby on rails was soo simple.\nI wish react would have been just as easy…</p>\n<p>They did a great job teaching how to create a basic search, but once you need to customize it falls apart.\nOnce I found better documentation it become easy.\n<code class=\"language-text\">https://www.algolia.com/doc/api-reference/widgets/search-box/react/</code>\n<code class=\"language-text\">https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/</code></p>\n<p>After playing around with it, I was happy with the following component I created.\nIt has a custom form, and hits.\nIf the use did not type anything, it will not display the hits.\nThe hit is also rendering the first<em>name, which might need to be changed if your response does not have a first</em>name.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> algoliasearch <span class=\"token keyword\">from</span> <span class=\"token string\">'algoliasearch/lite'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> InstantSearch<span class=\"token punctuation\">,</span> Hits<span class=\"token punctuation\">,</span> Configure<span class=\"token punctuation\">,</span> connectStateResults<span class=\"token punctuation\">,</span> connectSearchBox <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-instantsearch-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> PropTypes <span class=\"token keyword\">from</span> <span class=\"token string\">'prop-types'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hit</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> hit <span class=\"token punctuation\">}</span><span class=\"token punctuation\">:</span> Props</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>hit<span class=\"token punctuation\">.</span>first_name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> Results <span class=\"token operator\">=</span> <span class=\"token function\">connectStateResults</span><span class=\"token punctuation\">(</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> searchState <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span>\n    searchState <span class=\"token operator\">&amp;&amp;</span> searchState<span class=\"token punctuation\">.</span>query <span class=\"token operator\">?</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Hits hitComponent<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>Hit<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span> <span class=\"token comment\">//&lt;div>No query&lt;/div></span>\n    <span class=\"token keyword\">null</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SearchBox</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> currentRefinement<span class=\"token punctuation\">,</span> isSearchStalled<span class=\"token punctuation\">,</span> refine <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>form noValidate role<span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span>\n                   onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n                      e<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                      <span class=\"token comment\">// Whatever you want when the user submits form</span>\n                   <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>input className<span class=\"token operator\">=</span><span class=\"token string\">\"input-field\"</span>\n           type<span class=\"token operator\">=</span><span class=\"token string\">\"search\"</span>\n           name<span class=\"token operator\">=</span><span class=\"token string\">\"Search\"</span>\n           placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Explore Rejuve\"</span> \n           value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>currentRefinement<span class=\"token punctuation\">}</span>\n           onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token function\">refine</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>currentRefinement <span class=\"token operator\">!==</span> <span class=\"token string\">''</span> <span class=\"token operator\">?</span>\n      <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>a className<span class=\"token operator\">=</span><span class=\"token string\">\"btn waves-effect waves-light\"</span>\n              onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">refine</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>i className<span class=\"token operator\">=</span><span class=\"token string\">\"material-icons\"</span><span class=\"token operator\">></span>close<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>i<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>no<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">{</span>isSearchStalled <span class=\"token operator\">?</span> <span class=\"token string\">'My search is stalled'</span> <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">}</span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> CustomSearchBox <span class=\"token operator\">=</span> <span class=\"token function\">connectSearchBox</span><span class=\"token punctuation\">(</span>SearchBox<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Search</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> searchClient <span class=\"token operator\">=</span> <span class=\"token function\">algoliasearch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>algoliaSearchAppId<span class=\"token punctuation\">,</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>algoliaSearchKey\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>InstantSearch\n        indexName<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>indexName<span class=\"token punctuation\">}</span>\n        searchClient<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>searchClient<span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>CustomSearchBox <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Configure hitsPerPage<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token number\">20</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Results <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>InstantSearch<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nSearch<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  algoliaSearchKey<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  algoliaSearchAppId<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n  indexName<span class=\"token punctuation\">:</span> PropTypes<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Search<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Here is an example how to use it.\nMake sure you update <code class=\"language-text\">algoliaSearchKey</code>, <code class=\"language-text\">algoliaSearchAppId</code>, and <code class=\"language-text\">indexName</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">'react-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Search <span class=\"token keyword\">from</span> <span class=\"token string\">'./search.js'</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>Search algoliaSearchKey<span class=\"token operator\">=</span><span class=\"token string\">\"XXXXX\"</span>\n              algoliaSearchAppId<span class=\"token operator\">=</span><span class=\"token string\">\"XXXX\"</span>\n              indexName<span class=\"token operator\">=</span><span class=\"token string\">\"User\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Pretty simple once you know what you are doing.\nA good resource to help you is algolia widget documentation.\n<code class=\"language-text\">https://www.algolia.com/doc/api-reference/widgets/search-box/react/</code>\n<code class=\"language-text\">https://www.algolia.com/doc/api-reference/widgets/instantsearch/react/</code></p>","frontmatter":{"title":"Algolia React","date":"August 07, 2019","description":"How to add search to reactjs using Algolia which will provide suggestions through search box.","author":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/algolia-react/","previous":{"fields":{"slug":"/adding-algolia-to-rails/"},"frontmatter":{"title":"Adding Algolia to Rails","tags":["ruby","ruby-on-rails"]}},"next":{"fields":{"slug":"/ruby-custom-error-handling/"},"frontmatter":{"title":"Ruby Custom Error Handling","tags":["ruby","ruby-on-rails"]}}}}}